<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAABMLAAATCwAAAAAAAAAA
        AADtnGAA7ZxgAO2cYAAAAAADAAAACAAAAA4AAAATAAAAGQAAACEAAAAoAAAAKwAAAC0AAAAyAAAANAAA
        ADEGAwAuCgUALAQCACUAAAAhAAAAHgAAABkAAAAVAAAAEAAAAAoAAAAEAAAAAQAAAAAAAAAAAAAAAAAA
        AAAAAAAA////AAAAAAIAAAAJAAAAEgAAAB0AAAApAAAANgAAAEMnGhBWdEwvfoxcOZGwdEetr3NHrrx8
        TLzTjFXZ1IxV2KxwQ7WfZjy3oGg+taRsQqWHWTeHRi4cYwAAAEcAAAA8AAAALQAAAB4AAAAPAAAABQAA
        AAAAAAAAAAAAAAAAAAD///8AAAAAEQAAACgAAAA8AAAASnlQMYXIhVHM5Jdc8OqbX/zlm1325Zxc9+ij
        Xv/oo17/56Rd/+amXf/mpl3/25VT/3hgP/9vd2L/yIpQ/OKZW/boml7565tf/d2TWeeXZD2ZAAAASwAA
        ADMAAAAaAAAABwAAAAEAAAAAAAAAAP///wAAAAAlAAAASAAAAFrFg1DL5p1f9uusZP/qsWb/6rVn/+q1
        Z//qtWf/6rVn/+q1Z//qtWf/6rVn/+q1Z//ao1n/fWdA/yxDRv91fmX/06Nd/+i0Zv/qtGf/67Bl/+ii
        YfjglVvsJxoQYQAAADsAAAAYAAAAAwAAAAAAAAAA////AAAAACEAAABBPSgZZOqcYPnxwXX/8cF1//HB
        df/xwXX/8cF1//HBdf/xwXX/8cF1//HBdf/xwXX/8cF1/+SwZv+TelD/uPX+/7P0/f+en33/4LNt//HB
        df/xwXX/8cF1/+6saf3Fg1HIAAAARwAAAB8AAAAFAAAAAAAAAAD///8AAAAACwAAAByPXjpY66Fk8/jN
        gv/4zYL/+M2C//jNgv/4zYL/+M2C//jNgv/4zYL/+M2C//jNgv/4zIL/57hw/6uTZv+t7/n/d+v//1rL
        2/+/oWn/8cd+//jNgv/4zYL/9sN7/+SZXucAAAAuAAAAEgAAAAIAAAAAAAAAAP///wDtnGAAAAAABNeN
        V0vvp2nx/tWM//7VjP/+1Yz//tWM//7VjP/+1Yz//tWM//7VjP/60or//NOL//3Ui//rvXf/vqBv/1Kr
        tv9T4///Web//3ugj//lwH7//tWM//7VjP/7zYX/651h6gAAAA0AAAADAAAAAAAAAAAAAAAA////AO2c
        YADtnGAA7ZxgR/CpavD/1o///9aP///Wj///1o///9aP///Wj///1o///9aP/+O2b//csGz/8cqG/+7A
        e//UuY3/eoBo/0bd//9X5f//Wcvb/8amb//60oz//9aP//zMh//un2PjAAAAAAAAAAAAAAAAAAAAAAAA
        AAD///8A7ZxgAO2cYADtnGA176Rn8P/Sj///0o///9KP///Sj///0o///9KP///Sj//2yYj/5LJm/+rD
        fv/fsGr/06hw/+bUq/+egVj/PazC/03g//9Z5v//h5uG/+vChP//0o//+8aE/+6gY9UAAAAAAAAAAAAA
        AAAAAAAAAAAAAP///wDtnGAA7ZxgAO2cYAXtnGD9/8qP///Kj///yo///8qP///Kj///yo///8qP/+Kx
        bf/wz4n///S4//HQi//ksGL/2ruE/7uSVf9khHf/P9r//1Pj//9dvMf/zqN0//zIjf/5vID/7qBkvwAA
        AAAAAAAAAAAAAAAAAAAAAAAA////AO2cYADtnGAA7ZxgAO6fZLv1r3b8/8SP///Ej///xI///8SP///E
        j//ttn7/5rds///wp//wzIH/5LBi/+e0av/hr2X/1bJv/7Oodf81utr/Rt3//1fl//+YkHj/8LiH//Wu
        dfvtnWGJAAAAAAAAAAAAAAAAAAAAAAAAAAD///8A7ZxgAO2cYACWlpYA7ZxgEO6fZNXyp23w/L6K///F
        kv//xZL//8WS/+OxaP/534r/7MBx/+65c//nxKL/rcjW/6rT5//RqG//xaRh/1qOhv831///TeD//2Ky
        uv/SnG//65tf/e2cYA0AAAAAAAAAAAAAAAAAAAAAAAAAAP///wDtnGAA7ZxgAJaWlgCWlpYAlpaWAO2c
        YFDun2Tl8qpz8frAkv/yvon/6btr/+3Cbv/svH7/v87V/5XO9P+HyfT/esDv/26v2v/LoWD/pI9T/ynB
        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
        AAsTOUhtRXyU/lduff9Pfsj7YkvGoQAAAAf///8A////AP///wCWlpYAlpaWAJaWlgCWlpYDlpaWExla
        hrcNYpr/DmWf/xNgmP+Xw93/m8bf/5nE3v95pML/YYut/0NslP8+Z43/LVN6/0pukf9WboiCUlJSCwAA
        AAAAAAAAAAAAAg0NDS5We6fxhHj2/39f9/95XPT7OSpyJ////wD///8A////AJaWlgCWlpYAlpaWAJaW
        lgGWlpYJGViCjQ1jmf8OaqX/D2ej/xdjm/8lZpn/DEmB/wtEfP8LQnv/Cz93/ws8c/8LN2v/CTFg/wgr
        VfsWLU0vAAAAAAAAAABjYWgAAAAAD3iLy7WfkPv/jXX5/31g9v5JNpJC////AP///wD///8AlpaWAJaW
        lgCWlpYAlpaWAJaWlgIeVXs1DF6Q/w5pof8PbKf/D2ej/w5gnP8NWZX/DlOR/w1PjP8NS4j/DEWB/ww/
        eP8KN2r/CC5b/wclTIIAAAAAAAAAAAAAAAAAAAADRkZeMY6h6+Bej+HgJV6UdwAAABH///8A////AP//
        /wCWlpYAlpaWAJaWlgCWlpYAlpaWAJaWlgEMUoChDGCT/w5nn/8OaaL/D2Wh/w5gnf8OW5j/DlWT/w1P
        jf8NSob/C0F7/wo4bf8IL13/BiVOigAAAAAAAAAAAAAAAAAAAAAAAAAGAAAAFAAAABoAAAAOAAAAA///
        /wD///8A////AJaWlgCWlpYAlpaWAJaWlgCWlpYAlpaWAJaWlgAMT31bC1mK0A1elP8NX5b/DV2W/w1Y
        kv8NUo3/DEyG/wtFfv8LPnT/CTRl6gcrV5AFIkoVAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA////AP///wD///8AlpaWAJaWlgCWlpYAlpaWAJaWlgCWlpYAlpaWAJaWlgCWlpYACUl3MApM
        fGYKTH6NCkp9rgpGecwKQHKZCTprkwgzYUsHK1gDlpaWAJaWlgCWlpYAlpaWAJaWlgCWlpYAlpaWAP//
        /wD///8A////AP///wD///8A4AAAPwAAAB8AAAAHAAAABwAAAAcAAAAHgAAAD8AAAD/AAAA/wAAAP+AA
        AD/gAAA/+AAAf/4AAD/+AAA//gAAP/4AAB/8AAAf/AAAD/wAAA/4AAAH+AAAB/gAAAP4AAID+AAAA/gA
        AwH4AAMB+AADgfwAA4H+AAPB/4AD///gD/8=
</value>
  </data>
</root>